apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app: "{{ .Release.Name }}"

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      containers:
        {{- include "helm.server" . | indent 8 }}       
          ports:
            - containerPort: {{ .Values.server.port }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              # memory: 100mi
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              # memory: 200mi
          livenessProbe:
            httpGet:
              path: {{ .Values.server.livenessProbe.path }}
              port: {{ .Values.server.port }}
            initialDelaySeconds: {{ .Values.server.livenessProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.server.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.server.livenessProbe.periodSeconds }}
          startupProbe:
            httpGet:
              path: {{ .Values.server.startupProbe.path }}
              port: {{ .Values.server.port }}
            initialDelaySeconds: {{ .Values.server.startupProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.server.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.server.startupProbe.periodSeconds }}           
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: secret-key
            - name: DEBUG
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: debug
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: db-name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: db-password
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-map"
                  key: postgres_db_url
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: db-port
            - name: TWILIO_ACCOUNT_SID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: twilio-account-sid
            - name: TWILIO_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: twilio_auth_token
            - name: VERIFICATION_SID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: verification-sid
            - name: RAZOR_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: razor-key-id
            - name: RAZOR_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: razor-key-secrete
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: aws-secret-access-key
            - name: AWS_STORAGE_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: aws-storage-bucket-name
            - name: AWS_LOCATION
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: aws-location
            - name: AWS_S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: aws-s3-endpoint-url
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
spec:
  selector:
    app: "{{ .Release.Name }}"
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: {{ .Values.server.port }}
      targetPort: {{ .Values.server.port }}
      

--- 
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}
  minReplicas: {{ .Values.hpa.minReplicas }}
  maxReplicas: {{ .Values.hpa.maxReplicas }}
  metrics:
  - type: Resource 
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.hpa.averageUtilization }}
  # - type: Resource 
  #   resource:
  #     name: memory
  #     target:
  #       type: AverageValue
  #       AverageValue: 200Mi
